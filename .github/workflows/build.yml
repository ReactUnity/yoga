name: Build Binaries

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Setup VS Dev Environment
        if: startsWith(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Build Win32
        if: startsWith(matrix.os, 'windows')
        run: |
          mkdir -p build32 && cd build32
          cmake -DCMAKE_CXX_COMPILER=cl.exe -A Win32 ..
          cmake --build . -- /property:Configuration=Release
          cd ..
          mkdir -p dist/win-x86
          cp build32/Release/yogacore.dll dist/win-x86/yoga.dll

      - name: Build
        if: startsWith(matrix.os, 'windows')
        run: |
          mkdir -p build && cd build
          cmake -DCMAKE_CXX_COMPILER=cl.exe -A x64 ..
          cmake --build . -- /property:Configuration=Release
          cd ..
          mkdir -p dist/win-x64
          cp build/Release/yogacore.dll dist/win-x64/yoga.dll

      - name: Build
        if:  startsWith(matrix.os, 'macOS')
        run: |
          mkdir -p build && cd build
          cmake -G Ninja .. -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
          cmake --build . --config Release
          cd ..
          mkdir -p dist/osx
          cp build/libyogacore.dylib dist/osx/libyoga.dylib

      - name: Build
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          mkdir -p build && cd build
          cmake -G Ninja ..
          cmake --build . --config Release
          cd ..
          mkdir -p dist/linux
          cp build/libyogacore.so dist/linux/libyoga.so

      - name: Upload Binaries
        uses: actions/upload-artifact@v3
        if: github.event_name == 'push'
        with:
          path: dist/**
          name: prebuilt_yoga_binaries

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install NDK 21
        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;21.0.6113669" "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}
      - name: Install dependencies
        run: |
          if [[ -n "${{ secrets.encrypted_d27e803291ff_iv }}" ]]; then
            openssl aes-256-cbc -K ${{ secrets.encrypted_d27e803291ff_key }} -iv {{ secrets.encrypted_d27e803291ff_iv }} -in scripts/setup-keys.enc -d >> gradle.properties;
          fi
          sudo apt-get update
          sudo apt-get install -y ninja-build
          pushd $HOME
          git clone --depth 1 https://github.com/facebook/buck.git
          cd buck
          ant
          popd
          echo "$HOME/buck/bin" >> $GITHUB_PATH
          export PATH=$PATH:$HOME/buck/bin/
          buck --version
      - name: Build
        run: |
          ./gradlew :yoga:assembleRelease
          mkdir -p dist/android
          cp java/build/outputs/aar/yoga-release.aar dist/android/yoga.aar

      - name: Upload Binaries
        uses: actions/upload-artifact@v3
        if: github.event_name == 'push'
        with:
          path: dist/**
          name: prebuilt_yoga_binaries

